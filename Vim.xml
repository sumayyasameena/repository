<?xml version="1.0" encoding="UTF-8"?>
<root>
    <!--
    This file is part of Npackd.
    
    Npackd is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    Npackd is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    
    You should have received a copy of the GNU General Public License
    along with Npackd.  If not, see <http://www.gnu.org/licenses/>.
    -->
    <spec-version>2</spec-version>
    <license name="edu.mit.web.MIT">
        <title>MIT</title>
        <url>http://opensource.org/licenses/MIT</url>
    </license>
    <license name="org.opensource.BSD2ClauseLicense">
        <title>BSD 2-clause license</title>
        <url>http://opensource.org/licenses/BSD-2-Clause</url>
    </license>
    <package name="csv-vim">
        <title>Vim plugin csv.vim</title>
        <url>https://github.com/chrisbra/csv.vim</url>
        <description>used for handling comma separated data</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="tern-for-vim">
        <title>Vim plugin for Tern</title>
        <url>https://github.com/marijnh/tern_for_vim</url>
        <description>WARNING: please configure the proxy settings for the Administrator in Node.js npm before installing this package.&#13;
Provides [Tern](http://ternjs.net/)-based JavaScript editing support</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-airline">
        <title>Vim plugin Airline</title>
        <url>https://github.com/bling/vim-airline</url>
        <description>Lean &amp; mean status/tabline</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-bufferline">
        <title>Vim plugin Bufferline</title>
        <url>https://github.com/bling/vim-bufferline</url>
        <description>Super simple vim plugin to show the list of buffers in the command bar.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-buftabline">
        <title>Vim plugin vim-buftabline</title>
        <url>https://github.com/ap/vim-buftabline</url>
        <description>Vim Plugin. It takes over the tabline and renders the buffer list in it instead of a tab list</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <license>edu.mit.web.MIT</license>
        <category>Text</category>
        <changelog>https://github.com/ap/vim-buftabline/commits/master</changelog>
        <screenshot>https://camo.githubusercontent.com/3ae8a69591bc00bbbe8a0944edff7f3b92a2f134/687474703a2f2f61702e6769746875622e696f2f76696d2d6275667461626c696e652f73637265656e73686f742e706e67</screenshot>
    </package>
    <package name="vim-colorschemes">
        <title>Vim plugin Colorschemes</title>
        <url>https://github.com/flazz/vim-colorschemes</url>
        <description>set of colorschemes</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-ctrlp">
        <title>Vim plugin CtrlP</title>
        <url>http://kien.github.io/ctrlp.vim/</url>
        <description>Full path fuzzy file, buffer, mru, tag, ... finder</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-delphi">
        <title>Vim plugin Delphi 7-2010 syntax</title>
        <url>http://www.vim.org/scripts/script.php?script_id=3078</url>
        <description>Syntax highlighting for Delphi 7-2010</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-easymotion">
        <title>Vim plugin EasyMotion</title>
        <url>https://github.com/Lokaltog/vim-easymotion</url>
        <description>Vim Plugin. Provides a much simpler way to use some motions. When one of the available motions is triggered, all visible text preceding or following the cursor is faded, and motion targets are highlighted.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-fuzzyfinder">
        <title>Vim plugin FuzzyFinder</title>
        <url>https://bitbucket.org/ns9tks/vim-fuzzyfinder/</url>
        <description>provides convenient ways to quickly reach the &#13;
buffer/file/command/bookmark/tag you want. FuzzyFinder searches with the &#13;
fuzzy/partial pattern to which it converted an entered pattern.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-gcw-syntax">
        <title>Vim plugin vimgcwsyntax</title>
        <url>http://code.google.com/p/vimgcwsyntax/</url>
        <description>Google Code Wiki Syntax support&#13;
To enable it, add to your C:\Users\username\\.vimrc the following:&#13;
    autocmd BufNewFile,BufRead *.wiki set ft=googlecodewiki</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-go">
        <title>Vim plugin for Go</title>
        <url>https://github.com/fatih/vim-go</url>
        <description>Go (golang) support for Vim. Contains official misc/vim files. vim-go installs automatically all necessary binaries for providing seamless Vim integration. It comes with pre-defined sensible settings (like auto gofmt on save), has autocomplete, snippet support, improved syntax highlighting, go toolchain commands, etc... It's highly customizable and each individual feature can be disabled/enabled easily.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <license>org.opensource.BSD2ClauseLicense</license>
        <category>Text</category>
    </package>
    <package name="vim-l9">
        <title>Vim plugin L9</title>
        <url>https://bitbucket.org/ns9tks/vim-l9/</url>
        <description>Vim-script library, which provides some utility functions and commands for programming in Vim.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-minibufexplorer">
        <title>Vim plugin MiniBufExplorer</title>
        <url>https://github.com/fholgado/minibufexpl.vim</url>
        <description>Vim Plugin. Shows buffers as tabs along the top or bottom of your screen.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-neomru">
        <title>Vim plugin neomru.vim</title>
        <url>https://github.com/Shougo/neomru.vim</url>
        <description>browse the list of most recently used (MRU) files via Unite</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <license>edu.mit.web.MIT</license>
        <category>Text</category>
    </package>
    <package name="vim-nerdtree">
        <title>Vim plugin NERD Tree</title>
        <url>https://github.com/scrooloose/nerdtree</url>
        <description>allows you to explore your filesystem and to open files and directories. It presents the filesystem to you in the form of a tree which you manipulate with the keyboard and/or mouse. It also allows you to perform simple filesystem operations.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-pathogen">
        <title>Vim plugin Pathogen</title>
        <url>https://github.com/tpope/vim-pathogen</url>
        <description>Manages 'runtimepath' &#13;
&#13;
Every Vim plugin including pathogen creates a directory link from %ALLUSERSPROFILE%/Npackd/VimPlugins/plugin-name to the plugin installation directory.&#13;
&#13;
To enable pathogen, add to your .vimrc the following:&#13;
    exec ':source ' . $ALLUSERSPROFILE . '/Npackd/VimPlugins/vim-pathogen-2.3/autoload/pathogen.vim'&#13;
    syntax on&#13;
    filetype plugin indent on&#13;
&#13;
Add the following to your .vimrc to enable all Vim plugins installed by Npackd:&#13;
    execute pathogen#infect($ALLUSERSPROFILE . '/Npackd/VimPlugins/{}')</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-quickfixsigns">
        <title>Vim plugin quickfixsigns</title>
        <url>https://github.com/tomtom/quickfixsigns_vim</url>
        <description>Displays |signs| at interesting lines:&#13;
    - items in the |quickfix| and |location-lists| (e.g. compilation errors)&#13;
    - |marks| a-zA-Z&#13;
    - changes (given the file is under a VCS like git, svn, mercurial, &#13;
      or bazaar)&#13;
    - relative line numbers (show numbers only until the cursor moves)&#13;
    - etc.&#13;
&#13;
Tags: hg</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-restore-view">
        <title>Vim plugin restore view</title>
        <url>http://www.vim.org/scripts/script.php?script_id=4021</url>
        <description>automatically restore one file's cursor position and folding information after restart vim. &#13;
&#13;
Minimum configuration:&#13;
" restore_view&#13;
" Tell vim to remember certain things when we exit&#13;
"  '10  :  marks will be remembered for up to 10 previously edited files&#13;
"  "100 :  will save up to 100 lines for each register&#13;
"  :20  :  up to 20 lines of command-line history will be remembered&#13;
"  %    :  saves and restores the buffer list&#13;
set viewdir=C:\\Users\\username\\vim\\viewdir&#13;
set viminfo='10,\"100,:20,%&#13;
set viewoptions=cursor,folds,slash,unix</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-signify">
        <title>Vim plugin Signify</title>
        <url>https://github.com/mhinz/vim-signify</url>
        <description>uses signs to indicate added, modified and removed lines based on data of an underlying version control system.&#13;
Minimum configuration in .vimrc: &#13;
    let g:signify_sign_delete_first_line='_'</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-snipmate">
        <title>Vim plugin snipMate</title>
        <url>https://github.com/msanders/snipmate.vim</url>
        <description>snippets</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-supertab">
        <title>Vim plugin supertab</title>
        <url>https://github.com/ervandew/supertab</url>
        <description>allows you to use &lt;Tab&gt; for all your insert completion needs.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-surround">
        <title>Vim plugin surround</title>
        <url>https://github.com/tpope/vim-surround</url>
        <description>Surround.vim is all about "surroundings": parentheses, brackets, quotes, XML tags, and more. The plugin provides mappings to easily delete, change and add such surroundings in pairs.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-syntastic">
        <title>Vim plugin syntastic</title>
        <url>https://github.com/scrooloose/syntastic</url>
        <description>syntax checking plugin that runs files through external syntax checkers and displays any resulting errors to the user. This can be done on demand, or automatically as files are saved. If syntax errors are detected, the user is notified and is happy because they didn't have to compile their code or execute their script to find them.&#13;
&#13;
At the time of this writing, syntax checking plugins exist for Ada, AppleScript, AsciiDoc, Bourne shell, C, C++, C#, Chef, CoffeeScript, Coco, Coq, CSS, Cucumber, CUDA, D, Dart, DocBook, Dust, Elixir, Erlang, eRuby, Fortran, Gentoo metadata, Go, Haml, Haskell, Haxe, Handlebars, HSS, HTML, Java, JavaScript, JSON, LESS, LISP, LLVM intermediate language, Lua, MATLAB, NASM, Objective-C, Objective-C++, OCaml, Perl, Perl POD, PHP, Puppet, Python, reStructuredText, Ruby, Rust, SASS/SCSS, Scala, Slim, Tcl, TeX, Twig, TypeScript, Vala, Verilog, VHDL, xHtml, XML, XSLT, YAML, z80, Zope page templates, zsh.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-tagbar">
        <title>Vim plugin Tagbar</title>
        <url>http://majutsushi.github.com/tagbar/</url>
        <description>displays tags in a window, ordered by class etc.&#13;
To enable it, add to your C:\Users\username\\.vimrc the following:&#13;
    let g:tagbar_ctags_bin='C:\Program Files\Exuberant_Ctags\ctags.exe'</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-unite">
        <title>Vim plugin unite.vim</title>
        <url>https://github.com/Shougo/unite.vim</url>
        <description>search and display information from arbitrary sources like files, buffers, recently used files or registers. You can run several pre-defined actions on a target displayed in the unite window.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-xml">
        <title>Vim plugin XML</title>
        <url>http://www.vim.org/scripts/script.php?script_id=1397</url>
        <description>A plugin for editing xml.&#13;
The script does retain most of the functionality of the original xml.vim (http://www.vim.org/scripts/script.php?script_id=301)&#13;
 - closing tags while you type&#13;
 - optional adding attributes&#13;
 - and more&#13;
 - % matches end or begin tag&#13;
it adds:&#13;
 - fold tags, comments and Cdata &#13;
 - add start tag&#13;
 - add end tags&#13;
 - add  tag around a visual blok or a tag,&#13;
 - join 2 adjacent same tags&#13;
 - delete tag&#13;
 - delete tag section&#13;
 - change a tag &#13;
 - visual mode  (blocks, listitems&#13;
The documentation will be created once the script is loaded e.g edit a xml file.&#13;
Read the help documentation by typing from within vim  :help xml-plugin</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>
    <package name="vim-xmledit">
        <title>Vim plugin xmledit</title>
        <url>https://github.com/sukima/xmledit</url>
        <description>file type plugin to help edit XML documents. It includes tag completion and tag jumping.</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
        <changelog>https://github.com/sukima/xmledit/commits/master</changelog>
    </package>
    <package name="vim-youcompleteme">
        <title>Vim plugin youcompleteme</title>
        <url>https://bitbucket.org/Haroogan/vim-youcompleteme-for-windows/src</url>
        <description>as-you-type, fuzzy-search code completion engine for Vim. It has several completion engines: an identifier-based engine that works with every programming language, a semantic, Clang-based engine that provides native semantic code completion for C/C++/Objective-C/Objective-C++ (from now on referred to as "the C-family languages"), a Jedi-based completion engine for Python, an OmniSharp-based completion engine for C# and an omnifunc-based completer that uses data from Vim's omnicomplete system to provide semantic completions for many other languages (Ruby, PHP etc.).</description>
        <icon>https://lh6.googleusercontent.com/-oPg5OrLBr74/UZ8rV_mHduI/AAAAAAAACE0/twSVwJ4sOTQ/s800/vim.png</icon>
        <category>Text</category>
    </package>

    <version name="0.30" package="csv-vim">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b csv.vim-*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%</file>
        <url>https://codeload.github.com/chrisbra/csv.vim/zip/122ee5bb8f4e4f3151a3302562d5da9db71b2b7a</url>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="0.31" package="csv-vim">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b csv.vim-*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%</file>
        <url>https://codeload.github.com/chrisbra/csv.vim/zip/3a35bf1ba6759932809be768e6ba499f3773cbe1</url>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="0.5" package="tern-for-vim">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b tern*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
"%node%\npm.cmd" install &gt; .Npackd\Output.txt &amp;&amp; type .Npackd\Output.txt&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/marijnh/tern_for_vim/zip/0.5.0</url>
        <sha1>affbc615f8d14e3b5d0a48c9a00529f0bd564810</sha1>
        <dependency package="org.nodejs.NodeJS" versions="[0.10, 1)">
            <variable>NODE</variable>
        </dependency>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-huge" versions="[7.4, 8)"/>
        <dependency package="org.python.Python" versions="[2.7, 3)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="0.6" package="vim-airline">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-airline*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/bling/vim-airline/zip/v0.6</url>
        <sha1>11fac81bb5f33ee9a30f9f4fd5ba162390f50255</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="0.7" package="vim-airline">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-airline*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/bling/vim-airline/zip/v0.7</url>
        <sha1>b161dcfc36a27d5363b160248601966f37f3227e</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="0.3" package="vim-bufferline">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-bufferline*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%</file>
        <url>https://codeload.github.com/bling/vim-bufferline/zip/v0.3</url>
        <sha1>58361cedd09caf4b87aa6b5d9f1bc77c02cf7ab4</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1.2014.11.25" package="vim-buftabline">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://github.com/ap/vim-buftabline/archive/51fe7ccbce3fc769e412a1be3dcb3d96bce5bbcd.zip</url>
        <sha1>df7e87744f065afb15b709365c1d8a6605ff7fe9</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="2013.3.21" package="vim-colorschemes">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-colorschemes*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>http://downloads.sourceforge.net/project/npackd/com.github.flazz.VimColorschemes-2013.03.21.zip</url>
        <sha1>3a8d0266feed6551aa0552dbbaefbab8a258bc7d</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="2013.5.22" package="vim-colorschemes">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-colorschemes*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>http://downloads.sourceforge.net/project/npackd/vim-colorschemes-2013.5.22.zip</url>
        <sha1>bc67b510770e72b1677aad7932468fc32f510586</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="2014.4.13" package="vim-colorschemes">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-colorschemes*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://downloads.sourceforge.net/project/npackd/vim-colorschemes-2014.4.13.zip</url>
        <sha1>2a89fd0c421dfa1b5f52e5f2096f7696e37e0ed1</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="2014.10.18" package="vim-colorschemes">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-colorschemes*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/flazz/vim-colorschemes/zip/3a847b964a8f67059f25c5729507511ea55e2c23</url>
        <sha1>7520b6af525d6fbd1bd25f079fa567a5eeaba1e7</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1.79" package="vim-ctrlp">
        <file path=".Npackd\Install.bat">call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=19448</url>
        <sha1>f00b76e3ed80801771e925db81c88d8835e0e609</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1" package="vim-delphi">
        <file path=".Npackd\Install.bat">mkdir syntax&#13;
move delphi.vim syntax\&#13;
move pascal.vim syntax\&#13;
del filetype.vim&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=12923</url>
        <sha1>16b54798afa87711cb1002d1889ecc4bf0e35442</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1.3" package="vim-easymotion">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b Lokaltog*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=16838</url>
        <sha1>ad22da293dc54b729cd18ba3b84b9f39736a97c1</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="2" package="vim-easymotion">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/Lokaltog/vim-easymotion/zip/2.0</url>
        <sha1>0eb28e772c7f984b880244e3b860eae87f4f8573</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="4.2.2" package="vim-fuzzyfinder">
        <file path=".Npackd\Install.bat">call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=13961</url>
        <sha1>4a1c157f228904dc612442c30b245613b1349d55</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-l9" versions="[1.1, 2)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1" package="vim-gcw-syntax" type="one-file">
        <file path=".Npackd\Install.bat">ren download_script.php VimGCWSyntax.tar.gz&#13;
&#13;
&#13;
for /f %%x in ('dir /b *.gz') do set setup=%%x&#13;
"%sevenzipa%\7za.exe" x "%setup%" &gt; .Npackd\Output.txt &amp;&amp; type .Npackd\Output.txt&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
del "%setup%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
for /f %%x in ('dir /b *.tar') do set setup=%%x&#13;
"%sevenzipa%\7za.exe" x "%setup%" &gt; .Npackd\Output.txt &amp;&amp; type .Npackd\Output.txt&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
del "%setup%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=13989</url>
        <sha1>dbbf70518a31d9e259d70362c10d5e5c90bdffce</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="com.googlecode.windows-package-manager.NpackdCL" versions="[1.15.7, 2)"/>
        <dependency package="org.7-zip.SevenZIPA" versions="[9.20, 9.20]">
            <variable>sevenzipa</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="0.2014.9.3" package="vim-go">
        <important-file path="StartVimGo.bat" title="Start Vim with vim-go"/>
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-go*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path="StartVimGo.bat">set onecmd="%npackd_cl%\npackdcl.exe" "path" "--package=org.vim.Vim" "--versions=[7.3, 8)"&#13;
for /f "usebackq delims=" %%x in (`%%onecmd%%`) do set vim=%%x&#13;
&#13;
&#13;
&#13;
&#13;
set path=%go%\bin;%hg%;%git%\bin&#13;
"%vim%\gvim.exe"</file>
        <url>https://codeload.github.com/fatih/vim-go/zip/772927e969fec4e61b956aa950df3c4f56c2fce5</url>
        <sha1>81dbd3cd1603a3ec7186e7005b1bdc8d43de28e6</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>nih</variable>
        </dependency>
        <dependency package="vim-huge" versions="[7.3, 8)"/>
        <dependency package="com.googlecode.msysgit.MSysGit" versions="[1.9.4, 2)">
            <variable>git</variable>
        </dependency>
        <dependency package="com.selenic.mercurial.Mercurial" versions="[2,4)">
            <variable>hg</variable>
        </dependency>
        <dependency package="com.googlecode.windows-package-manager.NpackdCL" versions="[1.1, 2)"/>
        <dependency package="org.golang.Go" versions="[1.3, 2)">
            <variable>go</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="0.2014.10.18" package="vim-go">
        <important-file path="StartVimGo.bat" title="Start Vim with vim-go"/>
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-go*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path="StartVimGo.bat">set onecmd="%npackd_cl%\npackdcl.exe" "path" "--package=org.vim.Vim" "--versions=[7.3, 8)"&#13;
for /f "usebackq delims=" %%x in (`%%onecmd%%`) do set vim=%%x&#13;
&#13;
&#13;
&#13;
&#13;
set path=%go%\bin;%hg%;%git%\bin&#13;
"%vim%\gvim.exe"</file>
        <url>https://codeload.github.com/fatih/vim-go/zip/9b644da9d8f6cf4a1518e592082822c05dddfea6</url>
        <sha1>bc63c77b3d4f2b502b87d039fb64ab52473250d8</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>nih</variable>
        </dependency>
        <dependency package="vim-huge" versions="[7.3, 8)"/>
        <dependency package="com.googlecode.msysgit.MSysGit" versions="[1.9.4, 2)">
            <variable>git</variable>
        </dependency>
        <dependency package="com.selenic.mercurial.Mercurial" versions="[2,4)">
            <variable>hg</variable>
        </dependency>
        <dependency package="com.googlecode.windows-package-manager.NpackdCL" versions="[1.1, 2)"/>
        <dependency package="org.golang.Go" versions="[1.3, 2)">
            <variable>go</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="1" package="vim-go">
        <important-file path="StartVimGo.bat" title="Start Vim with vim-go"/>
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-go*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path="StartVimGo.bat">set onecmd="%npackd_cl%\npackdcl.exe" "path" "--package=org.vim.Vim" "--versions=[7.3, 8)"&#13;
for /f "usebackq delims=" %%x in (`%%onecmd%%`) do set vim=%%x&#13;
&#13;
&#13;
&#13;
&#13;
set path=%go%\bin;%hg%;%git%\bin&#13;
"%vim%\gvim.exe"</file>
        <url>https://github.com/fatih/vim-go/archive/v1.0.zip</url>
        <sha1>7d1a355beab56f93c259f6467f1a45f992b442ec</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>nih</variable>
        </dependency>
        <dependency package="vim-huge" versions="[7.3, 8)"/>
        <dependency package="com.googlecode.msysgit.MSysGit" versions="[1.9.4, 2)">
            <variable>git</variable>
        </dependency>
        <dependency package="com.selenic.mercurial.Mercurial" versions="[2,4)">
            <variable>hg</variable>
        </dependency>
        <dependency package="com.googlecode.windows-package-manager.NpackdCL" versions="[1.1, 2)"/>
        <dependency package="org.golang.Go" versions="[1.3, 2)">
            <variable>go</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1.1" package="vim-l9">
        <file path=".Npackd\Install.bat">call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=13948</url>
        <sha1>4d9b9b29b259b16e4f728d945bc797f349375cdf</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="6.4" package="vim-minibufexplorer">
        <file path=".Npackd\Install.bat">mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify&#13;
</file>
        <url>http://downloads.sourceforge.net/project/npackd/com.fholgado.MiniBufExplorer-6.4.zip</url>
        <sha1>16c2b3f715c36e037657351361be2326ab79ac80</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="6.5.2" package="vim-minibufexplorer">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b minibufexpl.vim*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/fholgado/minibufexpl.vim/zip/v6.5.2</url>
        <sha1>c8938815cb9643d86f0c06d675d5b8ff63a6eef5</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1" package="vim-neomru">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b neomru.vim*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://github.com/Shougo/neomru.vim/archive/f70be81d3e6faab5a0cff17743a5203ad08f62e2.zip</url>
        <sha1>d07d9d5c1926b38ea72bcbe49f7035e32725f1bf</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-unite" versions="[6, 7)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="4.2" package="vim-nerdtree">
        <file path=".Npackd\Install.bat">call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=17123</url>
        <sha1>8b4d8c0e86361c90c6c9953806cc8e50764b203c</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="2.2" package="vim-pathogen" type="one-file">
        <file path=".Npackd\Install.bat">mkdir autoload&#13;
move download_script.php autoload\pathogen.vim&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=19375</url>
        <sha1>70ca1322e06bd70bcaa3a419ce776ff4c02ddc71</sha1>
    </version>
    <version name="2.3" package="vim-pathogen">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-pathogen*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/tpope/vim-pathogen/zip/v2.3</url>
        <sha1>717f467d33975147c825753a9178d533df24605b</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-huge" versions="[5, 20)"/>
    </version>

    <version name="1.1" package="vim-quickfixsigns">
        <file path=".Npackd\Install.bat">mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>https://drive.google.com/uc?export=download&amp;id=0Bzt53EW9ybrwNTI4d3JidEhvYWs</url>
        <sha1>b9e32b254db9c24961fe25e8b1829d31c1370af3</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="1.5" package="vim-quickfixsigns">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b quickfixsigns_vim*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/tomtom/quickfixsigns_vim/zip/1.05</url>
        <sha1>2fc5d401ff58207d793a31b1573385639c4b4f57</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1.1" package="vim-restore-view" type="one-file">
        <file path=".Npackd\Install.bat">mkdir plugin&#13;
move download_script.php plugin\restore_view.vim&#13;
            &#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=17787</url>
        <sha1>1b2bee3255b255679b09de26b9e15b9cc90fcc2e</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="1.2" package="vim-restore-view" type="one-file">
        <file path=".Npackd\Install.bat">mkdir plugin&#13;
move download_script.php plugin\restore_view.vim&#13;
            &#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=22255</url>
        <sha1>557f8592b677d0873e21cfd7d6cb0586fb37ff4b</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="1.3" package="vim-restore-view" type="one-file">
        <file path=".Npackd\Install.bat">mkdir plugin&#13;
move download_script.php plugin\restore_view.vim&#13;
            &#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=22634</url>
        <sha1>74ce0f0239d5b5fe033ed6917e256c9848f96f3e</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1.9" package="vim-signify">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-signify*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/mhinz/vim-signify/zip/1.9</url>
        <sha1>02781953c2eb2bdf4d1327ff2b414fe46e832a9b</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="0.83" package="vim-snipmate">
        <file path=".Npackd\Install.bat">call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://www.vim.org/scripts/download_script.php?src_id=11006</url>
        <sha1>8af5b082f90cc5b65d71fc4dc7d1ebc9b858d992</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="2" package="vim-supertab">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b supertab*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"            &#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify&#13;
</file>
        <url>https://codeload.github.com/ervandew/supertab/zip/2.0</url>
        <sha1>3ada0fd490935355aaaa012827cd7a6c75ac91a1</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="2.1" package="vim-supertab">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b supertab*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/ervandew/supertab/zip/2.1</url>
        <sha1>7e7af4c97307ceb65efe480016db503658da655c</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="2" package="vim-surround">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-surround*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/tpope/vim-surround/zip/v2.0</url>
        <sha1>dbe3b83e3b5887b09976ed5c31821ad4cef65bcc</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="3.2" package="vim-syntastic">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b syntastic*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"            &#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify&#13;
</file>
        <url>https://codeload.github.com/scrooloose/syntastic/zip/3.2.0</url>
        <sha1>d110ae1a307f5808bbd914276238bb47f2838449</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="3.3" package="vim-syntastic">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b syntastic*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"            &#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify&#13;
</file>
        <url>https://codeload.github.com/scrooloose/syntastic/zip/3.3.0</url>
        <sha1>59c0621b8a6712b25f4251da36d31a607861c930</sha1>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="3.4" package="vim-syntastic">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b syntastic*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/scrooloose/syntastic/zip/3.4.0</url>
        <sha1>a10e40e893b9d430b27422e497dfa64f5b9c4a5c</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="3.5" package="vim-syntastic">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b syntastic*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/scrooloose/syntastic/zip/3.5.0</url>
        <sha1>828cb5814b847ca78fb9022737c03ac19b09f4d3</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="3.6" package="vim-syntastic">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b syntastic*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/scrooloose/syntastic/zip/3.6.0</url>
        <sha1>93796b806c9b6c6576c38e3aa0ccfb714ebc4ad9</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="2.5" package="vim-tagbar">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b majutsushi-tagbar*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>http://github.com/majutsushi/tagbar/zipball/v2.5</url>
        <sha1>a090311cf0ee06a83ea9d301e049878086c41985</sha1>
        <dependency package="net.sourceforge.ExuberantCtags" versions="[5.8, 6)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="2.6" package="vim-tagbar">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b majutsushi-tagbar*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>http://github.com/majutsushi/tagbar/zipball/v2.6</url>
        <sha1>4299676469f7a215121435cf568c5c9f3effb862</sha1>
        <dependency package="net.sourceforge.ExuberantCtags" versions="[5.8, 6)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="2.6.1" package="vim-tagbar">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b majutsushi-tagbar*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>http://github.com/majutsushi/tagbar/zipball/v2.6.1</url>
        <sha1>f5f5bf29dd0889d91ed50fadddfd8badf1e65242</sha1>
        <dependency package="net.sourceforge.ExuberantCtags" versions="[5.8, 6)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="5" package="vim-unite">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b unite.vim*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>https://codeload.github.com/Shougo/unite.vim/zip/ver.5.0</url>
        <sha1>559889d7a24fe9f2707e429f09fa410c593b45b6</sha1>
        <dependency package="net.sourceforge.ExuberantCtags" versions="[5.8, 6)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="5.1" package="vim-unite">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b unite.vim*') do set name=%%x&#13;
cd "%name%"        &#13;
for /f "delims=" %%a in ('dir /b') do (&#13;
  move "%%a" ..&#13;
)&#13;
cd ..&#13;
rmdir "%name%"&#13;
if %errorlevel% neq 0 exit /b %errorlevel%&#13;
&#13;
mkdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/"&#13;
mklink /D "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%" "%CD%"&#13;
</file>
        <file path=".Npackd\Uninstall.bat">rmdir "%ALLUSERSPROFILE%/Npackd/VimPlugins/%NPACKD_PACKAGE_NAME%-%NPACKD_PACKAGE_VERSION%"&#13;
verify</file>
        <url>https://codeload.github.com/Shougo/unite.vim/zip/ver.5.1</url>
        <sha1>aee0b5188d4226bd2df591197e5471e58978331c</sha1>
        <dependency package="net.sourceforge.ExuberantCtags" versions="[5.8, 6)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="6" package="vim-unite">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b unite.vim*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/Shougo/unite.vim/zip/ver.6.0</url>
        <sha1>181624a7b777e179c46df3aeceab6b8a49a19865</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="net.sourceforge.ExuberantCtags" versions="[5.8, 6)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="6.1" package="vim-unite">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b unite.vim*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://codeload.github.com/Shougo/unite.vim/zip/ver.6.1</url>
        <sha1>8085e2f9897a91526bff1389d13d8111033ad6db</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="net.sourceforge.ExuberantCtags" versions="[5.8, 6)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1.40" package="vim-xml">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b xml.vim*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>http://downloads.sourceforge.net/project/npackd/vim-xml-1.40.zip</url>
        <sha1>a90c92d8e6074aaa0b216fbb7314367cb817f313</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="com.googlecode.windows-package-manager.NpackdCL" versions="[1.15.7, 2)"/>
        <dependency package="org.7-zip.SevenZIPA" versions="[9.20, 10)"/>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="1.10.5" package="vim-xmledit">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b xmledit-*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%</file>
        <url>https://github.com/sukima/xmledit/archive/v1.10.5.zip</url>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="1.84" package="vim-xmledit">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b xmledit-*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%</file>
        <url>https://github.com/sukima/xmledit/archive/v1.84.zip</url>
        <sha1>702a603325159c23b3d16c1efcd9bd329f815f2a</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>

    <version name="2014.3.11" package="vim-youcompleteme">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-ycm*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
&#13;
copy "%CLANG%\bin\libclang.dll" python\&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://bitbucket.org/Haroogan/vim-youcompleteme-for-windows/downloads/vim-ycm-9e54390-windows-x86.zip</url>
        <sha1>17c7435bd68e8076879a88b48fddb17d2b274ebc</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-huge" versions="[7.3.584, 7.5)"/>
        <dependency package="clang" versions="[3.4, 3.4]">
            <variable>CLANG</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
    <version name="2014.9.4" package="vim-youcompleteme">
        <file path=".Npackd\Install.bat">for /f "delims=" %%x in ('dir /b vim-ycm*') do set name=%%x&#13;
call "%NIH%\ExtractDir.bat" "%name%" || exit /b %errorlevel%&#13;
call "%NIH%\RegisterVimPlugin.bat" || exit /b %errorlevel%&#13;
&#13;
copy "%CLANG%\bin\libclang.dll" third_party\ycmd\&#13;
</file>
        <file path=".Npackd\Uninstall.bat">call "%NIH%\UnregisterVimPlugin.bat" || exit /b %errorlevel%&#13;
</file>
        <url>https://bitbucket.org/Haroogan/vim-youcompleteme-for-windows/downloads/vim-ycm-733de48-windows-x86.zip</url>
        <sha1>8bb00025217c44c7ee95838d824aab407ba00721</sha1>
        <dependency package="com.googlecode.windows-package-manager.NpackdInstallerHelper" versions="[1.5, 2)">
            <variable>NIH</variable>
        </dependency>
        <dependency package="vim-huge" versions="[7.3.584, 7.5)"/>
        <dependency package="clang" versions="[3.4, 3.4]">
            <variable>CLANG</variable>
        </dependency>
        <dependency package="vim-pathogen" versions="[2.2, 3)"/>
    </version>
</root>
